from flask_restful import Resource
from sqlalchemy.exc import SQLAlchemyError
from flask_restful import Api
from flask_restful import Resource
from sqlalchemy.exc import SQLAlchemyError
from flask_restful import Api
from flask_restful import Resource, marshal_with, fields, reqparse
import traceback
from flask import abort, jsonify, make_response, g
from models import db
from models import Seller, User, auth
import json
from flask import request
parser = reqparse.RequestParser()


# authenticate via username/pass or valid api-token
class Tokens(Resource):
    """
        This class is responsible for generating new tokens for sellers.
        A new token can be generated by an existing valid token or the combination of
        username and password
    """

    @auth.login_required
    def get(self):
        """
        :return: returns a valid token with with specified/default life
        """
        token = g.user.generate_auth_token()
        return jsonify({'token': token.decode('ascii')})
